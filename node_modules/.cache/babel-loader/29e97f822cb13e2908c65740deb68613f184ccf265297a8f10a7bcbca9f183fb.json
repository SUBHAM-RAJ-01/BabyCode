{"ast":null,"code":"import axios from\"axios\";import MockAdapter from\"axios-mock-adapter\";const mock=new MockAdapter(axios,{delayResponse:500});let students=[{id:1,name:\"Sunny\",email:\"sunny@abc.com\",course:\"Electronics\",age:22},{id:2,name:\"Trishir\",email:\"trishir@abc.com\",course:\"Computer Science\",age:22},{id:3,name:\"Jain\",email:\"jain@abc.com\",course:\"Mechanical\",age:23}];mock.onGet(\"/api/students\").reply(200,students);mock.onPost(\"/api/students\").reply(config=>{const newStudent=JSON.parse(config.data);newStudent.id=students.length+1;students.push(newStudent);return[201,newStudent];});export const getStudents=async()=>{const response=await axios.get(\"/api/students\");return response.data;};export const addStudent=async student=>{const response=await axios.post(\"/api/students\",student);return response.data;};","map":{"version":3,"names":["axios","MockAdapter","mock","delayResponse","students","id","name","email","course","age","onGet","reply","onPost","config","newStudent","JSON","parse","data","length","push","getStudents","response","get","addStudent","student","post"],"sources":["C:/Users/srajp/Desktop/BabyCode/src/services/students.js"],"sourcesContent":["import axios from \"axios\";\r\nimport MockAdapter from \"axios-mock-adapter\";\r\n\r\nconst mock = new MockAdapter(axios, { delayResponse: 500 });\r\n\r\nlet students = [\r\n  { id: 1, name: \"Sunny\", email: \"sunny@abc.com\", course: \"Electronics\", age: 22 },\r\n  { id: 2, name: \"Trishir\", email: \"trishir@abc.com\", course: \"Computer Science\", age: 22 },\r\n  { id: 3, name: \"Jain\", email: \"jain@abc.com\", course: \"Mechanical\", age: 23 },\r\n];\r\n\r\nmock.onGet(\"/api/students\").reply(200, students);\r\n\r\nmock.onPost(\"/api/students\").reply((config) => {\r\n  const newStudent = JSON.parse(config.data);\r\n  newStudent.id = students.length + 1;\r\n  students.push(newStudent);\r\n  return [201, newStudent];\r\n});\r\n\r\nexport const getStudents = async () => {\r\n  const response = await axios.get(\"/api/students\");\r\n  return response.data;\r\n};\r\n\r\nexport const addStudent = async (student) => {\r\n  const response = await axios.post(\"/api/students\", student);\r\n  return response.data;\r\n};"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,MAAO,CAAAC,WAAW,KAAM,oBAAoB,CAE5C,KAAM,CAAAC,IAAI,CAAG,GAAI,CAAAD,WAAW,CAACD,KAAK,CAAE,CAAEG,aAAa,CAAE,GAAI,CAAC,CAAC,CAE3D,GAAI,CAAAC,QAAQ,CAAG,CACb,CAAEC,EAAE,CAAE,CAAC,CAAEC,IAAI,CAAE,OAAO,CAAEC,KAAK,CAAE,eAAe,CAAEC,MAAM,CAAE,aAAa,CAAEC,GAAG,CAAE,EAAG,CAAC,CAChF,CAAEJ,EAAE,CAAE,CAAC,CAAEC,IAAI,CAAE,SAAS,CAAEC,KAAK,CAAE,iBAAiB,CAAEC,MAAM,CAAE,kBAAkB,CAAEC,GAAG,CAAE,EAAG,CAAC,CACzF,CAAEJ,EAAE,CAAE,CAAC,CAAEC,IAAI,CAAE,MAAM,CAAEC,KAAK,CAAE,cAAc,CAAEC,MAAM,CAAE,YAAY,CAAEC,GAAG,CAAE,EAAG,CAAC,CAC9E,CAEDP,IAAI,CAACQ,KAAK,CAAC,eAAe,CAAC,CAACC,KAAK,CAAC,GAAG,CAAEP,QAAQ,CAAC,CAEhDF,IAAI,CAACU,MAAM,CAAC,eAAe,CAAC,CAACD,KAAK,CAAEE,MAAM,EAAK,CAC7C,KAAM,CAAAC,UAAU,CAAGC,IAAI,CAACC,KAAK,CAACH,MAAM,CAACI,IAAI,CAAC,CAC1CH,UAAU,CAACT,EAAE,CAAGD,QAAQ,CAACc,MAAM,CAAG,CAAC,CACnCd,QAAQ,CAACe,IAAI,CAACL,UAAU,CAAC,CACzB,MAAO,CAAC,GAAG,CAAEA,UAAU,CAAC,CAC1B,CAAC,CAAC,CAEF,MAAO,MAAM,CAAAM,WAAW,CAAG,KAAAA,CAAA,GAAY,CACrC,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAArB,KAAK,CAACsB,GAAG,CAAC,eAAe,CAAC,CACjD,MAAO,CAAAD,QAAQ,CAACJ,IAAI,CACtB,CAAC,CAED,MAAO,MAAM,CAAAM,UAAU,CAAG,KAAO,CAAAC,OAAO,EAAK,CAC3C,KAAM,CAAAH,QAAQ,CAAG,KAAM,CAAArB,KAAK,CAACyB,IAAI,CAAC,eAAe,CAAED,OAAO,CAAC,CAC3D,MAAO,CAAAH,QAAQ,CAACJ,IAAI,CACtB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}