{"ast":null,"code":"import axios from \"axios\";\nimport MockAdapter from \"axios-mock-adapter\";\nconst mock = new MockAdapter(axios, {\n  delayResponse: 500\n});\nlet students = [{\n  id: 1,\n  name: \"John Doe\",\n  email: \"john@example.com\",\n  course: \"Computer Science\",\n  age: 21\n}, {\n  id: 2,\n  name: \"Jane Smith\",\n  email: \"jane@example.com\",\n  course: \"Mathematics\",\n  age: 22\n}, {\n  id: 3,\n  name: \"Bob Johnson\",\n  email: \"bob@example.com\",\n  course: \"Physics\",\n  age: 23\n}];\nmock.onGet(\"/api/students\").reply(200, students);\nmock.onPost(\"/api/students\").reply(config => {\n  const newStudent = JSON.parse(config.data);\n  newStudent.id = students.length + 1;\n  students.push(newStudent);\n  return [201, newStudent];\n});\nexport const getStudents = async () => {\n  const response = await axios.get(\"/api/students\");\n  return response.data;\n};\nexport const addStudent = async student => {\n  const response = await axios.post(\"/api/students\", student);\n  return response.data;\n};","map":{"version":3,"names":["axios","MockAdapter","mock","delayResponse","students","id","name","email","course","age","onGet","reply","onPost","config","newStudent","JSON","parse","data","length","push","getStudents","response","get","addStudent","student","post"],"sources":["C:/Users/srajp/Desktop/BabyCode/src/services/students.js"],"sourcesContent":["import axios from \"axios\";\r\nimport MockAdapter from \"axios-mock-adapter\";\r\n\r\nconst mock = new MockAdapter(axios, { delayResponse: 500 });\r\n\r\nlet students = [\r\n  { id: 1, name: \"John Doe\", email: \"john@example.com\", course: \"Computer Science\", age: 21 },\r\n  { id: 2, name: \"Jane Smith\", email: \"jane@example.com\", course: \"Mathematics\", age: 22 },\r\n  { id: 3, name: \"Bob Johnson\", email: \"bob@example.com\", course: \"Physics\", age: 23 },\r\n];\r\n\r\nmock.onGet(\"/api/students\").reply(200, students);\r\n\r\nmock.onPost(\"/api/students\").reply((config) => {\r\n  const newStudent = JSON.parse(config.data);\r\n  newStudent.id = students.length + 1;\r\n  students.push(newStudent);\r\n  return [201, newStudent];\r\n});\r\n\r\nexport const getStudents = async () => {\r\n  const response = await axios.get(\"/api/students\");\r\n  return response.data;\r\n};\r\n\r\nexport const addStudent = async (student) => {\r\n  const response = await axios.post(\"/api/students\", student);\r\n  return response.data;\r\n};"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,WAAW,MAAM,oBAAoB;AAE5C,MAAMC,IAAI,GAAG,IAAID,WAAW,CAACD,KAAK,EAAE;EAAEG,aAAa,EAAE;AAAI,CAAC,CAAC;AAE3D,IAAIC,QAAQ,GAAG,CACb;EAAEC,EAAE,EAAE,CAAC;EAAEC,IAAI,EAAE,UAAU;EAAEC,KAAK,EAAE,kBAAkB;EAAEC,MAAM,EAAE,kBAAkB;EAAEC,GAAG,EAAE;AAAG,CAAC,EAC3F;EAAEJ,EAAE,EAAE,CAAC;EAAEC,IAAI,EAAE,YAAY;EAAEC,KAAK,EAAE,kBAAkB;EAAEC,MAAM,EAAE,aAAa;EAAEC,GAAG,EAAE;AAAG,CAAC,EACxF;EAAEJ,EAAE,EAAE,CAAC;EAAEC,IAAI,EAAE,aAAa;EAAEC,KAAK,EAAE,iBAAiB;EAAEC,MAAM,EAAE,SAAS;EAAEC,GAAG,EAAE;AAAG,CAAC,CACrF;AAEDP,IAAI,CAACQ,KAAK,CAAC,eAAe,CAAC,CAACC,KAAK,CAAC,GAAG,EAAEP,QAAQ,CAAC;AAEhDF,IAAI,CAACU,MAAM,CAAC,eAAe,CAAC,CAACD,KAAK,CAAEE,MAAM,IAAK;EAC7C,MAAMC,UAAU,GAAGC,IAAI,CAACC,KAAK,CAACH,MAAM,CAACI,IAAI,CAAC;EAC1CH,UAAU,CAACT,EAAE,GAAGD,QAAQ,CAACc,MAAM,GAAG,CAAC;EACnCd,QAAQ,CAACe,IAAI,CAACL,UAAU,CAAC;EACzB,OAAO,CAAC,GAAG,EAAEA,UAAU,CAAC;AAC1B,CAAC,CAAC;AAEF,OAAO,MAAMM,WAAW,GAAG,MAAAA,CAAA,KAAY;EACrC,MAAMC,QAAQ,GAAG,MAAMrB,KAAK,CAACsB,GAAG,CAAC,eAAe,CAAC;EACjD,OAAOD,QAAQ,CAACJ,IAAI;AACtB,CAAC;AAED,OAAO,MAAMM,UAAU,GAAG,MAAOC,OAAO,IAAK;EAC3C,MAAMH,QAAQ,GAAG,MAAMrB,KAAK,CAACyB,IAAI,CAAC,eAAe,EAAED,OAAO,CAAC;EAC3D,OAAOH,QAAQ,CAACJ,IAAI;AACtB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}